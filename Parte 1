----- Abrir arquivo

with open("textoteste.txt","r") as arquivo:
    texto = (arquivo.read())
    vertices = int(texto[0])
    arestas = texto[1:]


print (vertices)
print (arestas)


----- Código dos grafos
Class Graph: 
    def __init__(self, v, a):
        self.v = v
        self.a = a
        self.matriz = [[0]*self.v for i in range (self.v)]
        self.lista = [[] for i in range(self.v)]
    
    def arestas_matriz(self, v1, v2):
        #resolver como fazer isso do arquivo
        self.matriz[v1-1][v2-1] = 1 #se os vértices estão conecatados 
        self.matriz[v2-1][v1-1]=1 #grafo não é direcionado, 'espelhamos' o resultado

    def contruir_matriz(self,v):
        for i in range(len(self.a)):
            self.arestas_matriz(self.a[i][0], self.a[1])      

    def arestas_lista(self,):
    
    def grau (self):
        graus= [] #contruir lista com o garu de cada vértice
        for i in range(self.v):
            gi = 0
            for j in range(self.v):
                gi += self.matriz[i][j]
            graus += [gi]
        
        self.graumin= 0
        self.graumax = 0
        self.graumed =0
        self.mediana = 0
        for k in range(len(graus)):
            if grau[k] < self.graumin:
                self.graumin = grau[k]
            if grau[k] > self.graumax:
                self.graumax = grau[k]
            gm += garu[k]
        self.graumed = gm/self.v
        
    
    def saidas(v,a): #talvez tenha que criar outra classe pra saída
        print('Número de vértices', self.v)
        print("Número de arestas:", print len(self.a)
        print("Grau mínimo:",self.graumin)
        print("Grau máximo:",self.graumax)
        print("Grau médio:",self.graumed)
        print("Grau mediano:",#)



----Código de busca


